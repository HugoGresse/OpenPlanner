import * as React from 'react'
import { Box, Grid, IconButton, Typography } from '@mui/material'
import { Control, TextFieldElement, useFieldArray } from 'react-hook-form-mui'
import { Add, Delete } from '@mui/icons-material'
import { Category, EventForForm } from '../../../../types'
import { randomColor } from '../../../../utils/colors/randomColor'

export type CategoriesFieldsProps = {
    control: Control<EventForForm, any>
    isSubmitting: boolean
}
type CategoryWithKey = Category & { key: string }
export const CategoriesFields = ({ control, isSubmitting }: CategoriesFieldsProps) => {
    const { fields, append, remove } = useFieldArray({
        control,
        name: 'categories',
        keyName: 'key',
    })

    return (
        <>
            <Typography fontWeight="600" mt={2}>
                Categories
            </Typography>

            <Box paddingLeft={2}>
                {fields.map((category: CategoryWithKey, index) => (
                    <Box display="flex" key={category.key}>
                        <Grid container sx={{ alignItems: 'center' }} spacing={1}>
                            <Grid item sm={12} md={5}>
                                <TextFieldElement
                                    id={category.key}
                                    label={`id: ${category.id}`}
                                    name={`categories.${index}.name`}
                                    control={control}
                                    variant="filled"
                                    size="small"
                                    margin="dense"
                                    disabled={isSubmitting}
                                    fullWidth
                                />
                            </Grid>
                            <Grid item sm={5} md={2}>
                                <TextFieldElement
                                    id={category.key + 'color'}
                                    label="Color"
                                    name={`categories.${index}.color`}
                                    control={control}
                                    variant="filled"
                                    size="small"
                                    margin="dense"
                                    type="color"
                                    disabled={isSubmitting}
                                    sx={{ minWidth: 80 }}
                                    InputLabelProps={{ shrink: true }}
                                />
                            </Grid>
                            <Grid item sm={5} md={3}>
                                <TextFieldElement
                                    id={category.key + 'colorSecondary'}
                                    label="Secondary color"
                                    name={`categories.${index}.colorSecondary`}
                                    control={control}
                                    variant="filled"
                                    size="small"
                                    margin="dense"
                                    type="color"
                                    disabled={isSubmitting}
                                    sx={{ minWidth: 120 }}
                                    InputLabelProps={{ shrink: true }}
                                />
                            </Grid>
                            <Grid item sm={2} md={2}>
                                <IconButton
                                    aria-label="Remove category"
                                    onClick={() => {
                                        remove(index)
                                    }}
                                    edge="end">
                                    <Delete />
                                </IconButton>
                            </Grid>
                        </Grid>
                    </Box>
                ))}
                <IconButton
                    aria-label="Add category"
                    onClick={() => {
                        append({
                            id: `autogenerated-${Date.now()}`,
                            name: '',
                            color: randomColor(),
                        })
                    }}>
                    <Add />
                </IconButton>
            </Box>
        </>
    )
}
